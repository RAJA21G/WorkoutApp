# -*- coding: utf-8 -*-
"""Untitled14.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HG5tCySYtoeq160_mwTl7xdw3rASDic2
"""

import streamlit as st
import pandas as pd
import joblib
import numpy as np
from sklearn.preprocessing import StandardScaler, LabelEncoder

# Load the saved model and scaler
model = joblib.load('workout_recommender_model.pkl')
scaler = joblib.load('scaler.pkl')

# Function to make predictions
def recommend_workout(age, gender, weight, goal, fitness_level, duration, equipment, intensity):
    # Encode categorical values
    label_encoder = LabelEncoder()
    goal = label_encoder.fit_transform([goal])[0]
    fitness_level = label_encoder.fit_transform([fitness_level])[0]
    equipment = label_encoder.fit_transform([equipment])[0]
    intensity = label_encoder.fit_transform([intensity])[0]

    # Create the feature array
    features = np.array([[age, gender, weight, goal, fitness_level, duration, equipment, intensity]])

    # Standardize the features
    features[:, [0, 2, 5]] = scaler.transform(features[:, [0, 2, 5]])

    # Predict the workout
    predicted_workout = model.predict(features)
    return predicted_workout[0]

# Streamlit user interface
st.title('Personalized Workout Plan Recommender')

st.sidebar.header('User Input')

# User input fields
age = st.sidebar.slider('Age', 18, 100, 25)
gender = st.sidebar.selectbox('Gender', ['Male', 'Female'])
weight = st.sidebar.slider('Weight (kg)', 30, 200, 70)
goal = st.sidebar.selectbox('Goal', ['Weight Loss', 'Muscle Gain', 'Endurance', 'General Fitness'])
fitness_level = st.sidebar.selectbox('Fitness Level', ['Beginner', 'Intermediate', 'Advanced'])
duration = st.sidebar.slider('Duration (minutes)', 10, 180, 30)
equipment = st.sidebar.selectbox('Equipment', ['None', 'Dumbbells', 'Barbell', 'Machines', 'Resistance Bands'])
intensity = st.sidebar.selectbox('Intensity', ['Low', 'Medium', 'High'])

# Button to get workout recommendation
if st.sidebar.button('Get Recommendation'):
    recommended_workout = recommend_workout(age, gender, weight, goal, fitness_level, duration, equipment, intensity)
    st.write(f"Recommended Workout: {recommended_workout}")